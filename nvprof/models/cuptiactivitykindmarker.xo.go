// Package models contains the types for schema ''.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql"
	"errors"
)

// CuptiActivityKindMarker represents a row from 'CUPTI_ACTIVITY_KIND_MARKER'.
type CuptiActivityKindMarker struct {
	ID         sql.NullInt64 `json:"_id_"`       // _id_
	Flags      int           `json:"flags"`      // flags
	Timestamp  int           `json:"timestamp"`  // timestamp
	ID         int           `json:"id"`         // id
	Objectkind int           `json:"objectKind"` // objectKind
	Objectid   []byte        `json:"objectId"`   // objectId
	Name       int           `json:"name"`       // name
	Domain     int           `json:"domain"`     // domain

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the CuptiActivityKindMarker exists in the database.
func (cakm *CuptiActivityKindMarker) Exists() bool {
	return cakm._exists
}

// Deleted provides information if the CuptiActivityKindMarker has been deleted from the database.
func (cakm *CuptiActivityKindMarker) Deleted() bool {
	return cakm._deleted
}

// Insert inserts the CuptiActivityKindMarker to the database.
func (cakm *CuptiActivityKindMarker) Insert(db XODB) error {
	var err error

	// if already exist, bail
	if cakm._exists {
		return errors.New("insert failed: already exists")
	}

	// sql insert query, primary key provided by autoincrement
	const sqlstr = `INSERT INTO CUPTI_ACTIVITY_KIND_MARKER (` +
		`flags, timestamp, objectKind, objectId, name, domain` +
		`) VALUES (` +
		`?, ?, ?, ?, ?, ?` +
		`)`

	// run query
	XOLog(sqlstr, cakm.Flags, cakm.Timestamp, cakm.Objectkind, cakm.Objectid, cakm.Name, cakm.Domain)
	res, err := db.Exec(sqlstr, cakm.Flags, cakm.Timestamp, cakm.Objectkind, cakm.Objectid, cakm.Name, cakm.Domain)
	if err != nil {
		return err
	}

	// retrieve id
	id, err := res.LastInsertId()
	if err != nil {
		return err
	}

	// set primary key and existence
	cakm.ID = sql.NullInt64(id)
	cakm._exists = true

	return nil
}

// Update updates the CuptiActivityKindMarker in the database.
func (cakm *CuptiActivityKindMarker) Update(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !cakm._exists {
		return errors.New("update failed: does not exist")
	}

	// if deleted, bail
	if cakm._deleted {
		return errors.New("update failed: marked for deletion")
	}

	// sql query
	const sqlstr = `UPDATE CUPTI_ACTIVITY_KIND_MARKER SET ` +
		`flags = ?, timestamp = ?, objectKind = ?, objectId = ?, name = ?, domain = ?` +
		` WHERE _id_ = ?`

	// run query
	XOLog(sqlstr, cakm.Flags, cakm.Timestamp, cakm.Objectkind, cakm.Objectid, cakm.Name, cakm.Domain, cakm.ID)
	_, err = db.Exec(sqlstr, cakm.Flags, cakm.Timestamp, cakm.Objectkind, cakm.Objectid, cakm.Name, cakm.Domain, cakm.ID)
	return err
}

// Save saves the CuptiActivityKindMarker to the database.
func (cakm *CuptiActivityKindMarker) Save(db XODB) error {
	if cakm.Exists() {
		return cakm.Update(db)
	}

	return cakm.Insert(db)
}

// Delete deletes the CuptiActivityKindMarker from the database.
func (cakm *CuptiActivityKindMarker) Delete(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !cakm._exists {
		return nil
	}

	// if deleted, bail
	if cakm._deleted {
		return nil
	}

	// sql query
	const sqlstr = `DELETE FROM CUPTI_ACTIVITY_KIND_MARKER WHERE _id_ = ?`

	// run query
	XOLog(sqlstr, cakm.ID)
	_, err = db.Exec(sqlstr, cakm.ID)
	if err != nil {
		return err
	}

	// set deleted
	cakm._deleted = true

	return nil
}

// CuptiActivityKindMarkerByID retrieves a row from 'CUPTI_ACTIVITY_KIND_MARKER' as a CuptiActivityKindMarker.
//
// Generated from index 'CUPTI_ACTIVITY_KIND_MARKER__id__pkey'.
func CuptiActivityKindMarkerByID(db XODB, id sql.NullInt64) (*CuptiActivityKindMarker, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`_id_, flags, timestamp, id, objectKind, objectId, name, domain ` +
		`FROM CUPTI_ACTIVITY_KIND_MARKER ` +
		`WHERE _id_ = ?`

	// run query
	XOLog(sqlstr, id)
	cakm := CuptiActivityKindMarker{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, id).Scan(&cakm.ID, &cakm.Flags, &cakm.Timestamp, &cakm.ID, &cakm.Objectkind, &cakm.Objectid, &cakm.Name, &cakm.Domain)
	if err != nil {
		return nil, err
	}

	return &cakm, nil
}

// CuptiActivityKindMarkersByTimestamp retrieves a row from 'CUPTI_ACTIVITY_KIND_MARKER' as a CuptiActivityKindMarker.
//
// Generated from index 'INDEX_CUPTI_ACTIVITY_KIND_MARKER'.
func CuptiActivityKindMarkersByTimestamp(db XODB, timestamp int) ([]*CuptiActivityKindMarker, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`_id_, flags, timestamp, id, objectKind, objectId, name, domain ` +
		`FROM CUPTI_ACTIVITY_KIND_MARKER ` +
		`WHERE timestamp = ?`

	// run query
	XOLog(sqlstr, timestamp)
	q, err := db.Query(sqlstr, timestamp)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*CuptiActivityKindMarker{}
	for q.Next() {
		cakm := CuptiActivityKindMarker{
			_exists: true,
		}

		// scan
		err = q.Scan(&cakm.ID, &cakm.Flags, &cakm.Timestamp, &cakm.ID, &cakm.Objectkind, &cakm.Objectid, &cakm.Name, &cakm.Domain)
		if err != nil {
			return nil, err
		}

		res = append(res, &cakm)
	}

	return res, nil
}
